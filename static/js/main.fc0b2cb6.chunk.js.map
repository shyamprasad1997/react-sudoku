{"version":3,"sources":["serviceWorker.js","components/RouteWithLayout/RouteWithLayout.js","components/Sudoku/components/Cell/Cell.js","components/Sudoku/components/SudokuLogic/SudokuLogic.js","services/gameServices.js","constants/constants.js","components/Sudoku/Sudoku.js","layouts/Minimal/Minimal.js","views/GameView/GameView.js","Routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","RouteWithLayout","props","Layout","layout","Component","component","rest","render","matchProps","PageHeader","toggle","id","Fragment","Input","style","this","invalid","backgroundColor","value","onChange","disabled","Popover","placement","isOpen","popoverOpen","target","PopoverBody","className","map","item","key","onClick","setFieldValue","Button","size","gridColumnStart","React","checkDuplicateHorizontal","data","duplicates","i","j","push","getVerticalGrid","verticalGrid","vert","getSquareGrid","squareGrid","k","l","SudokuLogic","Check","invalidIndices","forEach","element","length","t","Map","set","get","gameServices","getSudoku","fetch","method","headers","Authorization","localStorage","getItem","credentials","then","response","json","text","ok","status","removeItem","message","statusText","handleResponse","Sudoku","setLoading","setState","state","loading","setGameStarted","gameStarted","setDifficulty","difficulty","currentTarget","setSudoku","sudoku","setSudokuReset","sudokuReset","setError","error","setWinnerModal","winnerModalOpen","setPopoverOpen","temp3","parseInt","setInvalidIndices","setTimeout","timer","seconds","minutes","hours","resetTimer","clearSudoku","temp","createNew","clearInterval","intervalId","setInterval","checkSudoku","e","preventDefault","Modal","ModalHeader","ModalBody","ModalFooter","color","Container","fluid","Row","Col","grid","top","bottom","left","right","includes","sudokuGridGenerator","Minimal","children","height","width","GameView","Routes","exact","MinimalLayout","path","to","App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B,EAAI8B,IAAI,KAAM,MACd9B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","file":"static/js/main.fc0b2cb6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React from \"react\";\r\nimport { Input, Popover, PopoverBody, Button } from \"reactstrap\";\r\nimport \"./Cell.css\";\r\n\r\nclass PageHeader extends React.Component {\r\n  toggle = () => {\r\n    this.props.toggle(this.props.id);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Input\r\n          style={this.props.invalid ? { backgroundColor: \"#c13434\" } : {}}\r\n          id={`Popover${this.props.id}`}\r\n          value={this.props.value === 0 ? \"\" : this.props.value}\r\n          onChange={() => {}}\r\n          disabled={this.props.disabled}\r\n        ></Input>\r\n        <Popover\r\n          placement=\"right\"\r\n          isOpen={\r\n            this.props.popoverOpen === this.props.id && !this.props.disabled\r\n          }\r\n          target={`Popover${this.props.id}`}\r\n          toggle={this.toggle}\r\n        >\r\n          <PopoverBody>\r\n            <div className=\"sudoku-popover-grid\">\r\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9].map(item => (\r\n                <li\r\n                  key={`${this.props.id + item}`}\r\n                  onClick={() => this.props.setFieldValue(this.props.id, item)}\r\n                >\r\n                  <center>\r\n                    <Button className=\"sudoku-cell-close\" size=\"sm\">\r\n                      {item}\r\n                    </Button>\r\n                  </center>\r\n                </li>\r\n              ))}\r\n              <li\r\n                onClick={() => this.props.setFieldValue(this.props.id, 0)}\r\n                style={{ gridColumnStart: 2 }}\r\n              >\r\n                <center>\r\n                  <Button className=\"sudoku-cell-close\" size=\"sm\">\r\n                    -\r\n                  </Button>\r\n                </center>\r\n              </li>\r\n            </div>\r\n          </PopoverBody>\r\n        </Popover>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageHeader;\r\n","const Check = data => {\r\n  let horizontalGrid = [];\r\n  let verticalGrid = [];\r\n  let squareGrid = [];\r\n  const invalidIndices = [];\r\n  data.forEach((item, i) => {\r\n    item.forEach((element, j) => {\r\n      if (element === 0) {\r\n        invalidIndices.push(i + \"\" + j);\r\n      }\r\n    });\r\n  });\r\n  if (invalidIndices.length !== 0) {\r\n    return invalidIndices;\r\n  }\r\n  horizontalGrid = data;\r\n  horizontalGrid.forEach((item, i) => {\r\n    let t = checkDuplicateHorizontal(item);\r\n    if (t.length !== 0) {\r\n      t.map(item => {\r\n        invalidIndices.push(i + \"\" + item[0]);\r\n        invalidIndices.push(i + \"\" + item[1]);\r\n      });\r\n    }\r\n  });\r\n  verticalGrid = getVerticalGrid(data);\r\n  verticalGrid.forEach((item, i) => {\r\n    let t = checkDuplicateHorizontal(item);\r\n    if (t.length !== 0) {\r\n      t.map(item => {\r\n        invalidIndices.push(item[0] + \"\" + i);\r\n        invalidIndices.push(item[1] + \"\" + i);\r\n      });\r\n    }\r\n  });\r\n\r\n  let map = new Map();\r\n  map.set(\"00\", \"00\");\r\n  map.set(\"01\", \"01\");\r\n  map.set(\"02\", \"02\");\r\n  map.set(\"03\", \"10\");\r\n  map.set(\"04\", \"11\");\r\n  map.set(\"05\", \"12\");\r\n  map.set(\"06\", \"20\");\r\n  map.set(\"07\", \"21\");\r\n  map.set(\"08\", \"22\");\r\n  map.set(\"10\", \"03\");\r\n  map.set(\"11\", \"04\");\r\n  map.set(\"12\", \"05\");\r\n  map.set(\"13\", \"13\");\r\n  map.set(\"14\", \"14\");\r\n  map.set(\"15\", \"15\");\r\n  map.set(\"16\", \"23\");\r\n  map.set(\"17\", \"24\");\r\n  map.set(\"18\", \"25\");\r\n  map.set(\"20\", \"06\");\r\n  map.set(\"21\", \"07\");\r\n  map.set(\"22\", \"08\");\r\n  map.set(\"23\", \"16\");\r\n  map.set(\"24\", \"17\");\r\n  map.set(\"25\", \"18\");\r\n  map.set(\"26\", \"26\");\r\n  map.set(\"27\", \"27\");\r\n  map.set(\"28\", \"28\");\r\n  map.set(\"30\", \"30\");\r\n  map.set(\"31\", \"31\");\r\n  map.set(\"32\", \"32\");\r\n  map.set(\"33\", \"40\");\r\n  map.set(\"34\", \"41\");\r\n  map.set(\"35\", \"42\");\r\n  map.set(\"36\", \"50\");\r\n  map.set(\"37\", \"51\");\r\n  map.set(\"38\", \"52\");\r\n  map.set(\"40\", \"33\");\r\n  map.set(\"41\", \"34\");\r\n  map.set(\"42\", \"35\");\r\n  map.set(\"43\", \"43\");\r\n  map.set(\"44\", \"44\");\r\n  map.set(\"45\", \"45\");\r\n  map.set(\"46\", \"53\");\r\n  map.set(\"47\", \"54\");\r\n  map.set(\"48\", \"55\");\r\n  map.set(\"50\", \"36\");\r\n  map.set(\"51\", \"37\");\r\n  map.set(\"52\", \"38\");\r\n  map.set(\"53\", \"46\");\r\n  map.set(\"54\", \"47\");\r\n  map.set(\"55\", \"48\");\r\n  map.set(\"56\", \"56\");\r\n  map.set(\"57\", \"57\");\r\n  map.set(\"58\", \"58\");\r\n  map.set(\"60\", \"60\");\r\n  map.set(\"61\", \"61\");\r\n  map.set(\"62\", \"62\");\r\n  map.set(\"63\", \"70\");\r\n  map.set(\"64\", \"71\");\r\n  map.set(\"65\", \"72\");\r\n  map.set(\"66\", \"80\");\r\n  map.set(\"67\", \"81\");\r\n  map.set(\"68\", \"82\");\r\n  map.set(\"70\", \"73\");\r\n  map.set(\"71\", \"74\");\r\n  map.set(\"72\", \"75\");\r\n  map.set(\"73\", \"73\");\r\n  map.set(\"74\", \"74\");\r\n  map.set(\"75\", \"75\");\r\n  map.set(\"76\", \"83\");\r\n  map.set(\"77\", \"84\");\r\n  map.set(\"78\", \"85\");\r\n  map.set(\"80\", \"66\");\r\n  map.set(\"81\", \"67\");\r\n  map.set(\"82\", \"68\");\r\n  map.set(\"83\", \"76\");\r\n  map.set(\"84\", \"77\");\r\n  map.set(\"85\", \"78\");\r\n  map.set(\"86\", \"86\");\r\n  map.set(\"87\", \"87\");\r\n  map.set(\"88\", \"88\");\r\n\r\n  squareGrid = getSquareGrid(data);\r\n  squareGrid.forEach((item, i) => {\r\n    let t = checkDuplicateHorizontal(item);\r\n    if (t.length !== 0) {\r\n      t.map(item => {\r\n        invalidIndices.push(\r\n          map.get(i + \"\" + item[0]),\r\n          map.get(i + \"\" + item[0])\r\n        );\r\n      });\r\n    }\r\n  });\r\n  return invalidIndices;\r\n};\r\n\r\nconst checkDuplicateHorizontal = data => {\r\n  let duplicates = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      if (i !== j && data[i] === data[j]) {\r\n        duplicates.push([i, j]);\r\n      }\r\n    }\r\n  }\r\n  return duplicates;\r\n};\r\n\r\nconst getVerticalGrid = data => {\r\n  const verticalGrid = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    let vert = [];\r\n    for (let j = 0; j < 9; j++) {\r\n      vert.push(data[j][i]);\r\n    }\r\n    verticalGrid.push(vert);\r\n  }\r\n  return verticalGrid;\r\n};\r\n\r\nconst getSquareGrid = data => {\r\n  const squareGrid = [];\r\n  [0, 3, 6].map(k => {\r\n    [0, 3, 6].map(l => {\r\n      let vert = [];\r\n      [0, 1, 2].map(i => {\r\n        [0, 1, 2].map(j => {\r\n          vert.push(data[i + k][j + l]);\r\n        });\r\n      });\r\n      squareGrid.push(vert);\r\n    });\r\n  });\r\n  return squareGrid;\r\n};\r\n\r\nconst SudokuLogic = {\r\n  Check\r\n};\r\n\r\nexport default SudokuLogic;\r\n","import { BASEURL } from \"../constants/constants\";\r\nexport const gameServices = {\r\n  getSudoku\r\n};\r\n\r\nfunction getSudoku(value) {\r\n  return fetch(`${BASEURL}/sudoku?difficulty=${value}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"user\"),\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  }).then(response => handleResponse(response));\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.json().then(text => {\r\n    let data = text;\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n      if (response.status === 400) {\r\n      }\r\n      const error = (data && data.message) || response.statusText;\r\n      return error;\r\n    }\r\n    return data;\r\n  });\r\n}\r\n","export const BASEURL = \"https://unigames-backend.herokuapp.com/v1/api\";\n","import React from \"react\";\r\nimport \"./Sudoku.css\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\n\r\nimport { Cell, SudokuLogic } from \"./components\";\r\nimport { gameServices } from \"../../services/gameServices\";\r\n\r\nclass Sudoku extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gameStarted: false,\r\n      sudoku: null,\r\n      sudokuReset: null,\r\n      error: null,\r\n      popoverOpen: \"\",\r\n      invalidIndices: [],\r\n      timer: {\r\n        seconds: 0,\r\n        minutes: 0,\r\n        hours: 0\r\n      },\r\n      loading: false,\r\n      intervalId: 0,\r\n      winnerModalOpen: false,\r\n      difficulty: \"easy\"\r\n    };\r\n  }\r\n\r\n  setLoading = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: value\r\n    });\r\n  };\r\n\r\n  setGameStarted = value => {\r\n    this.setState({\r\n      ...this.state,\r\n      gameStarted: value\r\n    });\r\n  };\r\n\r\n  setDifficulty = value => {\r\n    this.setState({\r\n      difficulty: value.currentTarget.value\r\n    });\r\n  };\r\n\r\n  setSudoku = data => {\r\n    this.setState({\r\n      ...this.state,\r\n      sudoku: data\r\n    });\r\n  };\r\n\r\n  setSudokuReset = data => {\r\n    this.setState({\r\n      ...this.state,\r\n      sudokuReset: data\r\n    });\r\n  };\r\n\r\n  setError = data => {\r\n    this.setState({\r\n      ...this.state,\r\n      error: data\r\n    });\r\n  };\r\n\r\n  setWinnerModal = data => {\r\n    this.setState({\r\n      ...this.state,\r\n      winnerModalOpen: data\r\n    });\r\n  };\r\n\r\n  setPopoverOpen = data => {\r\n    this.setState({\r\n      ...this.state,\r\n      popoverOpen: data\r\n    });\r\n  };\r\n\r\n  setFieldValue = (id, value) => {\r\n    let temp3 = [...this.state.sudoku];\r\n    temp3[parseInt(id[0])][parseInt(id[1])] = value;\r\n    this.setSudoku([...temp3]);\r\n    this.setPopoverOpen(\"\");\r\n  };\r\n\r\n  setInvalidIndices = data => {\r\n    this.setState({\r\n      ...this.state,\r\n      invalidIndices: data\r\n    });\r\n    setTimeout(\r\n      () =>\r\n        this.setState({\r\n          ...this.state,\r\n          invalidIndices: []\r\n        }),\r\n      3000\r\n    );\r\n  };\r\n\r\n  toggle = id => this.setPopoverOpen(id);\r\n\r\n  timer = () => {\r\n    let seconds = this.state.timer.seconds;\r\n    let minutes = this.state.timer.minutes;\r\n    let hours = this.state.timer.hours;\r\n    seconds++;\r\n    if (seconds >= 60) {\r\n      seconds = 0;\r\n      minutes++;\r\n      if (minutes >= 60) {\r\n        minutes = 0;\r\n        hours++;\r\n      }\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      timer: {\r\n        seconds: seconds,\r\n        minutes: minutes,\r\n        hours: hours\r\n      }\r\n    });\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      timer: {\r\n        seconds: 0,\r\n        minutes: 0,\r\n        hours: 0\r\n      }\r\n    });\r\n  };\r\n\r\n  clearSudoku = () => {\r\n    let temp = [];\r\n    this.state.sudokuReset.map(item => temp.push([...item]));\r\n    this.setSudoku(temp);\r\n  };\r\n\r\n  createNew = () => {\r\n    clearInterval(this.state.intervalId);\r\n    this.setLoading(true);\r\n    gameServices.getSudoku(this.state.difficulty).then(\r\n      data => {\r\n        this.setSudoku(data);\r\n        let temp = [];\r\n        data.map(item => temp.push([...item]));\r\n        this.setSudokuReset(temp);\r\n        this.resetTimer();\r\n        this.setState({\r\n          ...this.state,\r\n          gameStarted: true,\r\n          invalidIndices: [],\r\n          loading: false,\r\n          intervalId: setInterval(() => this.timer(), 1000)\r\n        });\r\n      },\r\n      error => {\r\n        this.setError(error);\r\n        this.setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  checkSudoku = e => {\r\n    e.preventDefault();\r\n    const invalidIndices = SudokuLogic.Check(this.state.sudoku);\r\n    if (invalidIndices.length === 0) {\r\n      clearInterval(this.state.intervalId);\r\n      this.setWinnerModal(true);\r\n      return;\r\n    }\r\n    this.setInvalidIndices(invalidIndices);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.error !== null) {\r\n      return <center>Error loading sudoku please refresh</center>;\r\n    } else if (this.state.loading) {\r\n      return <center>Loading game...</center>;\r\n    } else if (!this.state.gameStarted) {\r\n      return (\r\n        <Modal isOpen={true}>\r\n          <ModalHeader>Select Difficulty</ModalHeader>\r\n          <ModalBody>\r\n            <select onChange={this.setDifficulty}>\r\n              <option value=\"easy\">Easy</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"hard\">Hard</option>\r\n              <option value=\"vhard\">Very hard</option>\r\n              <option value=\"extreme\">Pro</option>\r\n            </select>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={() => this.createNew()}>\r\n              Start game\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      );\r\n    }\r\n    const sudokuGridGenerator = () => {\r\n      let grid = [];\r\n      let top = [0, 3, 6];\r\n      let bottom = [2, 5, 8];\r\n      let left = [0, 3, 6];\r\n      let right = [2, 5, 8];\r\n\r\n      [0, 1, 2, 3, 4, 5, 6, 7, 8].map((item, i) => {\r\n        [0, 1, 2, 3, 4, 5, 6, 7, 8].map((element, j) => {\r\n          grid.push(\r\n            <li\r\n              className={`${top.includes(i) ? \"sudoku-top\" : \"\"} ${\r\n                left.includes(j) ? \"sudoku-left\" : \"\"\r\n              }  ${right.includes(j) ? \"sudoku-right\" : \"\"} ${\r\n                bottom.includes(i) ? \"sudoku-bottom\" : \"\"\r\n              }`}\r\n            >\r\n              <Cell\r\n                popoverOpen={this.state.popoverOpen}\r\n                setPopoverOpen={this.setPopoverOpen}\r\n                toggle={this.toggle}\r\n                id={`${i}${j}`}\r\n                invalid={\r\n                  this.state.invalidIndices.includes(i + \"\" + j) &&\r\n                  this.state.sudokuReset[i][j] === 0\r\n                }\r\n                value={this.state.sudoku[i][j]}\r\n                disabled={this.state.sudokuReset[i][j] !== 0}\r\n                setFieldValue={this.setFieldValue}\r\n              />\r\n            </li>\r\n          );\r\n        });\r\n      });\r\n      return grid;\r\n    };\r\n\r\n    return (\r\n      <Container className=\"sudoku\" fluid>\r\n        <Modal\r\n          isOpen={this.state.winnerModalOpen}\r\n          toggle={() => this.setWinnerModal(false)}\r\n        >\r\n          <ModalHeader toggle={() => this.setWinnerModal(false)}>\r\n            Congratulations\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            You won with a time of: {this.state.timer.hours} hours{\" \"}\r\n            {this.state.timer.minutes} mins {this.state.timer.seconds} secs\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => this.setWinnerModal(false)}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        <Row>\r\n          <Col className=\"sudoku-main\">\r\n            <div className=\"sudoku-table\">{sudokuGridGenerator()}</div>\r\n          </Col>\r\n          <Col className=\"sudoku-sidebar\">\r\n            <Button onClick={this.checkSudoku}>Check</Button>\r\n            <Button onClick={() => this.setGameStarted(false)}>New Game</Button>\r\n            <Button onClick={() => this.clearSudoku()}>Clear</Button>\r\n            <div>\r\n              <div className=\"sudoku-counter\">\r\n                {this.state.timer.hours} : {this.state.timer.minutes} :{\" \"}\r\n                {this.state.timer.seconds}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sudoku;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Minimal = props => {\n  const { children } = props;\n\n  return (\n    <div style={{ height: \"100%\", width: \"100%\" }}>\n      <main style={{ height: \"100%\", width: \"100%\" }}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Minimal;\n","import React from \"react\";\r\nimport \"./GameView.css\";\r\nimport { Sudoku } from \"../../components\";\r\nfunction GameView(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"game-view\">\r\n        <Sudoku />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GameView;\r\n","import React from \"react\";\r\nimport { Switch, Redirect } from \"react-router-dom\";\r\nimport { RouteWithLayout } from \"./components\";\r\nimport { Minimal as MinimalLayout } from \"./layouts\";\r\nimport { GameView } from \"./views\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <RouteWithLayout\r\n        component={GameView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/game/sudoku\"\r\n      />\r\n      <Redirect to=\"/game/sudoku\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-react.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}